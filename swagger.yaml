openapi: 3.0.0
paths:
  /auth/admin-login:
    post:
      operationId: AuthController_adminLogin
      parameters: []
      responses:
        '201':
          description: ''
      tags: &ref_0
        - Auth
  /auth/tutor-login:
    post:
      operationId: AuthController_tutorLogin
      parameters: []
      responses:
        '201':
          description: ''
      tags: *ref_0
  /auth/student-login:
    post:
      operationId: AuthController_studentLogin
      parameters: []
      responses:
        '201':
          description: ''
      tags: *ref_0
  /auth/forgot-password:
    post:
      operationId: AuthController_forgotPassword
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordDto'
      responses:
        '201':
          description: ''
      tags: *ref_0
  /auth/reset-password/{token}:
    post:
      operationId: AuthController_resetPassword
      parameters:
        - name: token
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
      responses:
        '201':
          description: ''
      tags: *ref_0
  /tutors/sign-up:
    post:
      operationId: TutorsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTutorDto'
      responses:
        '201':
          description: Le tuteur a été créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTutorDto'
        '400':
          description: Les informations saisies sont invalides
      summary: Inscription d'un tuteur
      tags: &ref_1
        - Tutors
  /tutors:
    get:
      operationId: TutorsController_findOne
      parameters:
        - name: email
          required: true
          in: query
          description: Email du tuteur recherché
          schema:
            type: string
      responses:
        '200':
          description: Retourne un tuteur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tutor'
        '400':
          description: L'email du tuteur est invalide
        '404':
          description: Le tuteur avec l'email demandé n'est pas trouvé
      summary: Récupère un tuteur en fonction de son email
      tags: *ref_1
  /tutors/verification-otp:
    post:
      operationId: TutorsController_generateEmailVerification
      parameters: []
      responses:
        '201':
          description: ''
      tags: *ref_1
  /tutors/verify/{otp}:
    post:
      operationId: TutorsController_verifyEmail
      parameters:
        - name: otp
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailDto'
      responses:
        '201':
          description: ''
      tags: *ref_1
  /admins/sign-up:
    post:
      operationId: AdminsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminDto'
      responses:
        '201':
          description: L'administrateur a été créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAdminDto'
      summary: Inscription d'un administrateur
      tags:
        - Admins
  /students/sign-up:
    post:
      operationId: StudentsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudentDto'
      responses:
        '201':
          description: L'étudiant a été créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudentDto'
        '400':
          description: Les informations saisies sont invalides
      summary: Inscription d'un étudiant
      tags: &ref_2
        - Students
  /students:
    get:
      operationId: StudentsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_2
  /students/{id}:
    delete:
      operationId: StudentsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_2
  /subscriptions:
    post:
      operationId: SubscriptionsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionDto'
      responses:
        '201':
          description: ''
      tags: &ref_3
        - Subscriptions
  /subscriptions/verif:
    get:
      operationId: SubscriptionsController_verif
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_3
  /subscriptions/{id}:
    patch:
      operationId: SubscriptionsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionDto'
      responses:
        '200':
          description: ''
      tags: *ref_3
    delete:
      operationId: SubscriptionsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_3
  /stripe/checkout-session:
    post:
      operationId: StripeController_createCheckoutSession
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSessionDto'
      responses:
        '201':
          description: ''
      tags: &ref_4
        - Stripe
  /stripe/webhook:
    post:
      operationId: StripeController_handleWebhook
      parameters:
        - name: stripe-signature
          required: true
          in: header
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: *ref_4
  /sessions:
    post:
      operationId: SessionsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionDto'
      responses:
        '201':
          description: ''
      tags: &ref_5
        - Sessions
    get:
      operationId: SessionsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_5
  /sessions/{id}:
    get:
      operationId: SessionsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_5
    patch:
      operationId: SessionsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionDto'
      responses:
        '200':
          description: ''
      tags: *ref_5
    delete:
      operationId: SessionsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_5
  /games:
    post:
      operationId: GamesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameDto'
      responses:
        '201':
          description: ''
      tags: &ref_6
        - Games
    get:
      operationId: GamesController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_6
  /games/{id}:
    get:
      operationId: GamesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_6
    delete:
      operationId: GamesController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_6
info:
  title: Math&Magique
  description: Description de l'API de Math&Magique
  version: '1.0'
  contact: {}
tags:
  - name: Maths
    description: ''
servers: []
components:
  schemas:
    ForgotPasswordDto:
      type: object
      properties: {}
    ResetPasswordDto:
      type: object
      properties: {}
    Admin:
      type: object
      properties: {}
    CreateTutorDto:
      type: object
      properties:
        email:
          type: string
          example: email@email.fr
          description: Email du tuteur
        password:
          type: string
          example: Azertyuiop123456789!
          description: >-
            Mot de passe avec minimum 8 caractères, 1 chiffre, 1 caractère
            spécial, 1 majuscule, 1 minuscule 
        dob:
          format: date-time
          type: string
          example: 2001/02/17
          description: Date de naissance
        lastname:
          type: string
          example: Doe
          description: Nom de la personne
        firstname:
          type: string
          example: John
          description: Prénom de la personne
        admin_id:
          example: '1'
          description: Id de l'admin associé
          allOf:
            - $ref: '#/components/schemas/Admin'
      required:
        - email
        - password
        - dob
        - lastname
        - firstname
        - admin_id
    Tutor:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID du tuteur
        email:
          type: string
          example: email@email.fr
          description: Email du tuteur
        password:
          type: string
          example: Azertyuiop123456789!
          description: >-
            Mot de passe du tuteur (1 majuscule, 1 minuscule, 8 caractères
            minimum, 1 caractère spéciale) 
        dob:
          format: date-time
          type: string
          example: 20001/02/17
          description: Date de naissance du tuteur
        lastname:
          type: string
          example: Doe
          description: Nom du tuteur
        firstname:
          type: string
          example: John
          description: Prénom du tuteur
        customer_id:
          type: string
          example: cus_N1aB2C3D4E5F6G
          description: ID du client stripe associé au tuteur
        admin:
          type: number
          example: 3
          description: ID de l'administrateur qui à les droits sur le tuteur
      required:
        - id
        - email
        - password
        - dob
        - lastname
        - firstname
        - customer_id
        - admin
    VerifyEmailDto:
      type: object
      properties: {}
    CreateAdminDto:
      type: object
      properties:
        manage_tutors:
          type: boolean
          example: 'true'
          description: Autorisation pour modifier les tuteurs
        manage_subscriptions:
          type: boolean
          example: 'true'
          description: Autorisation pour modifier les abonnements
        manage_games:
          type: boolean
          example: 'true'
          description: Autorisation pour modifier les jeux
        email:
          type: string
          example: email@email.fr
          description: Email de l'admin
        password:
          type: string
          example: Azertyuiop123456789!
          description: >-
            Mot de passe avec minimum 8 caractères, 1 chiffre, 1 caractère
            spécial, 1 majuscule, 1 minuscule 
      required:
        - manage_tutors
        - manage_subscriptions
        - manage_games
        - email
        - password
    Grades:
      type: string
      enum:
        - cp
        - ce1
        - ce2
        - cm1
        - cm2
      description: Niveau de classe de l’élève
    CreateStudentDto:
      type: object
      properties:
        lastname:
          type: string
          example: Doe
          description: Nom de l'étudiant
        firstname:
          type: string
          example: John
          description: Prénom de l'étudiant
        username:
          type: string
          example: johndoe123
          description: Nom d'utilisateur unique
        password:
          type: string
          example: Mypassword123!
          description: Mot de passe sécurisé
        start_hour:
          type: string
          example: '2025-03-11T08:00:00.000Z'
          description: Heure de début de session (format ISO)
        duration:
          type: number
          example: 60
          description: Durée de la session en minutes
        tutor_id:
          type: number
          example: 1
          description: ID du tuteur associé à l'étudiant
        grade:
          example: cm1
          description: Niveau de classe de l’élève
          allOf:
            - $ref: '#/components/schemas/Grades'
      required:
        - lastname
        - firstname
        - username
        - password
        - start_hour
        - duration
        - tutor_id
        - grade
    CreateSubscriptionDto:
      type: object
      properties:
        price:
          type: number
          example: 19.99
          description: Prix de l'abonnement
        type:
          type: string
          example: monthly
          description: Type d'abonnement
      required:
        - price
        - type
    UpdateSubscriptionDto:
      type: object
      properties: {}
    CreateCheckoutSessionDto:
      type: object
      properties: {}
    CreateSessionDto:
      type: object
      properties:
        score:
          type: number
          example: 85
          description: Score de l'utilisateur (valeur entre 0 et 100)
        studentId:
          type: number
          example: 1
          description: ID de l'étudiant associé à cette session
        gameId:
          type: number
          example: 2
          description: ID du jeu associé à cette session
      required:
        - score
        - studentId
        - gameId
    UpdateSessionDto:
      type: object
      properties: {}
    CreateGameDto:
      type: object
      properties:
        name:
          type: string
          example: Morpion
          description: Nom du jeu
        path:
          type: string
          example: /src/jeu/nom
          description: Chemin vers l'emplacement du jeu
        grade:
          example: cm1
          description: Niveau de classe de l’élève
          allOf:
            - $ref: '#/components/schemas/Grades'
      required:
        - name
        - path
        - grade
